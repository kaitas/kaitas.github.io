<?xml version='1.0' encoding='shift_jis'?>
<doc xml:lang='ja'>
	<head>
		<title>バランスWiiボードを用いた「オーラ診断」(東京工科大)</title>
		<author>白井暁彦</author>
		<date>2009年5月8日最終更新-6/17-22:02 2009/06/28-0:25 2009/06/29(2時間23分)</date>
		<hp>http://akihiko.shirai.as/projects/WiiRemote/</hp>
	</head>
	<body>
次のテーマは「バランスWiiボード」を扱います(本書では「WiiBoard」と標記しています)。

第1.4章で紹介した学生作品『人間椅子』でもWiiBoardを2つ使い、Windows上の独自APIにより開発を行っていました。

このセクションではMac上のProcessingを使った学生の卒業制作作品『オーラ診断』の開発プロセスを、実際に本作品を開発した東京工科大学 コムメディアデザイン研究室・電王隊(小笠原明日美、平塚宏、平野実花、渕上伸吾)の皆さんのご協力により学生視点で開発資料を紹介することで、WiiBoardによる作品作りに親しんでみたいと思います。

<subsection title="プログラミング初心者4人が作った「オーラ診断」">

「オーラ診断」は東京工科大学 メディア学部の卒業制作展「メディアコンテンツ展2009」の「ライフエンタテインメント」として発表された作品です。

<figure id="IMG_4757.JPG" src="../chap9/aura-images/IMG_4757.jpg" title="MacとProcessingとWiiBoardで作った「オーラ診断」">
 <attribute locale="latex2e" name="style">width:7cm</attribute>
</figure>
まずは「オーラ診断」の動画とブログから紹介します(以下、渕上伸吾氏のBlogより文体も含めできる限りそのまま引用しています)。

<fyi title="「オーラ診断」">
YouTube動画「オーラ診断」

[URL] http://www.youtube.com/watch?v=3pL3ObUwoA8

プログラミング初心者4人が作った「オーラ診断」という作品

[URL] http://gryng.blog87.fc2.com/blog-entry-15.html
</fyi>

<subsubsection title="「オーラ診断」の概要">
「オーラ診断」は体験者のオーラを診断する作品です。自分のオーラの色や形を見て、脳内メーカーのように楽しんでもらうことが狙いです。

こんなかんじです。

<figure id="ss13496.png" src="../chap9/aura-images/ss13496.png" title="怪しい「オーラ」診断中">
<!--<attribute locale="latex2e" name="style">width:4cm</attribute>-->
</figure>


</subsubsection>
<subsubsection title="この作品のキモ">
いわゆる脳内メーカー系サービスは、名前や誕生日を入力させる事で結果を算出しています。そうしないと、分析する手がかりがないので当然です。

しかし、オーラを診断するにあたって、体験者に“入力”をさせたくありませんでした。厳密には、入力した事を気がつかせない。ここがこの作品のキモになっています。

そのために使ったデバイスが、バランスWiiボードです。

</subsubsection>
<subsubsection title="バランスWiiボード">
NINTENDO Wii用の周辺機器であり、Wii FitでおなじみのバランスWiiボード。Wii Fitではバランスゲームや筋トレ、ヨガなどを楽しめます。

このバランスWiiボードは、乗った人の重心を求めることができます。具体的には、左右の足の前後、合計４カ所にかかる重さを得ており、それぞれを比べる事で重心を調べています。

このバランスWiiボードなら、体験者に意識させずに情報を入力させることができる！と思ったわけです。なぜなら、そこに立たせるだけで重心の情報を得る事ができちゃうんですから。
</subsubsection>


<subsubsection title="BBOSC">
バランスWiiボードとMacを接続するために「BBOSC」というソフトを利用させていただきました。

<fyi title="4nchor5 la6 [BBOSC]ダウンロード">
[URL] http://456.im/wp/download/
</fyi>

立ち上げて、Wiiボードの電池ボックスの中にある[Sync]ボタンを押すだけ。びっくりするほど簡単に接続できました。

そうしてMacに送られてくる４カ所の体重の情報を、Processingに渡すわけです。このあたりは、Web Designing 3月号(2008年)の記事 [Beyond the Browser]を参考にさせていただきました。

大雑把に言えば、BBOSCが体重の情報をOSCという規格で送信し続けてくれるので、Proecssing側では「oscP5」というライブラリを使ってキャッチする、という感じです。</subsubsection>

<figure id="aura-blk" src="../chap9/aura-images/aura-blk.png" title="">
<!--<attribute locale="latex2e" name="style">width:4cm</attribute>
-->
</figure>

<subsubsection title="Processing">
Processingはビジュアル表現が容易なオブジェクト指向のプログラミング言語、らしい。はっきり言って名前すら知りませんでした。

Processingでは体重の情報を元にオーラを描画していきます。

人の重心は絶えず動いているもの。それだとちょっと扱いにくいので、その人の平均的な重心位置を求めるために、数秒の判定時間を設けました。その間、体験者には画面に集中しておいてもらいます。そうして見つかった重心の位置を使って、その人の基準となる1色を設定します。

基準の1色だけだと画面が寂しいので、重心の移動に合わせてある程度、色が変化するようにしました。この変化の幅も重心の位置から設定しています。より“その人だけのオーラ”が診断できるようになりました。

書いてないこともまだまだたくさんあるんですが、作品のおおまかな仕組みを紹介してみました。
</subsubsection>

</subsection>

<subsection title="補足：「BBOSC」とは？">
以上の渕上伸吾氏のブログエントリーだけですと、情報が足りませんので以下補足します。

「BBOSC」は石橋素(いしばし もとい)氏が雑誌「ウェブデザインニング」連載記事のために開発したもので、WiiRemoteでMacを操作できる「DarwiinRemote」などを開発したHiroaki Kimura氏による、MacOSにおけるWiiRemoteプログラミングAPI「WiiRemote Framework」を参考して開発されたそうです。

<fyi title="参考：Hiroaki Kimura氏のブログ「Hirolog」">
「DarwiinRemote」WiiRemoteでMacを操作できる

[URL]　http://blog.hiroaki.jp/2006/12/000433.html

「WiiRemote Framework」

[URL]　http://blog.hiroaki.jp/2007/05/000456.html
</fyi>

OSCとはOpen Sound Controlの略で、電子楽器やコンピュータの音楽演奏データをネットワーク経由でリアルタイムに共有するための通信プロトコル、つまりMIDIの代替となることを意図してつくられたネットワークプロトコルです。カリフォルニア大学バークレー校にある CNMAT（The Center for New Music and Audio Technologies）を中心にオープンソースで開発されています(http://opensoundcontrol.org/)。

<figure id="BBOSC.png" src="../chap9/aura-images/BBOSC.png" title="「BBOSC」">
 <attribute locale="latex2e" name="style">width:5cm</attribute>
</figure>

「BBOSC」実行時に、ターゲットとなるホストのIPアドレスとポートを指定します。4カ所にかかる体重を0-10000にスケールしてOSCで送信します。
右上、右下、左上、左下と、WiiBoardに内蔵された4つのひずみセンサーの値が得られますが、そのままでは使いにくいので、「オーラ診断」では{ X, Y}の値に変換し、平均を利用しています。

<figure id="aura-bb.png" src="../chap9/aura-images/aura-bb.png" title="WiiBoardから得られるセンサー値の利用">
 <!--<attribute locale="latex2e" name="style">width:4cm</attribute>-->
</figure>

<!--
【利用したライブラリ】
oscP5
BBOSCとの連携
JMyron
カメラの利用と処理
背景差分法で人と背景を分ける
blobDetection
人の輪郭をとるために使用



【オーラの描画】

 人の輪郭にそって光を出す
重心の情報を元にParticleの色を決めて、人の周りに飛ばす
この二つを組み合わせてオーラの描画としています。

【オーラの診断】
人の重心は常に動いているので、その人の重心の標準を求めます。

数秒の判定時間を設けて、重心の位置を足して平均を出しました。

平均の位置が前にあるか後ろにあるか、右にあるか左にあるかといった条件でおおまかに色を決め、XとYの割合などで微妙に色を変えてます。
わりと再現性のあるオーラ診断の実現


バランスWiiボードから得られる情報はわりと繊細なので、平均を出す時間を設けることで再現性を高めました。

自分のオーラを見ているときに、体重をどちらかにかけつづけると色がじわじわ変化します。光も強くでます。力を込めるとオーラが大きくなってるみたいで楽しい！

多少へんな挙動があっても、「オーラ」という曖昧な言葉が誤差を吸収してくれます。

【苦労したところ】
一番苦労したところが、カメラで人の輪郭をとる部分だったので、本の趣旨とは外れてしまいます（笑）
Wiiボード周りでの苦労は色を決めるためのアルゴリズムです。平均を取るようにすることで簡単にクリアできちゃったのですが…。
-->
</subsection>

<subsection title="その他の「オーラを作る技術」">
「オーラ診断」を実現するために、BBOSCのほかに、カメラの利用と処理に「JMyron」、人と背景を分けるために背景差分法を用い、人の輪郭をとるために「blobDetection」というProcessingのライブラリを使っています。

<fyi title="その他：画像処理のためのライブラリ">
「JMyron」

[URL] http://webcamxtra.sourceforge.net/download.shtml

　ちなみに「Myron」とはアメリカのコンピュータアーティスト ミロン・クルーガー(Myron Krueger, 1942)。に由来する名前と思われます。1980年代にインタラクティブ・アートやバーチャルリアリティーを使った作品を作った人です。

「Myron Krueger」(YouTube動画)

[URL] http://www.youtube.com/watch?v=A6ZYsX_dxzs



「blobDetection」
[URL] http://www.v3ga.net/processing/BlobDetection/

　Processingの画像処理ライブラリです。「Blob」とは「もやもやしたカタマリ」のことで、人物などの検出をするには向いています。なおこのホームページには画像処理を利用したさまざまなアートプロジェクトへのリンクがあります。

</fyi>

</subsection>

<subsection title="【演習問題】MacとWiiBoardの利用">

なおこの作品が発表された東京工科大学「メディアコンテンツ展2009」のホームページには「オーラ診断」の他にも面白い作品が数多く発表されています。

<fyi title="東京工科大学「メディアコンテンツ展2009」">
「ライフエンタテインメント」

[URL] http://www.teu.ac.jp/mce/2009/work/lifeenter.html
</fyi>

このセクションにご協力いただいた渕上伸吾氏も「Earth Surfer」というWiiBoardを使った別の「バックトゥザフューチャー感覚で写真を見るプロジェクト」を発表しています。


<fyi title="「WiiBoard」C#.NETでの開発">

　Windows環境では「WiimoteLib」でWiiBoardを利用することができます。特にC#.NETでWiiBoardを利用したい方は、小坂研修室でサンプルが公開されていますので活用すると良いでしょう。

[URL] http://www.kosaka-lab.com/tips/2009/02/wiiwii-fit.html
</fyi>

<dl>
  <dt>【演習】☆☆</dt>
  <dd>Mac環境で動く「BBOSC」や「WiiFlash」などWiiRemote利用ツールを探し、Processingを使った「誰も見たことがない」メディアアート作品制作に挑戦せよ。</dd>
  <dt>【演習】☆☆☆</dt>
  <dd>WiiBoardを使って、人間の「足踏み」を検出してVR世界を散歩せよ。なお「足踏み動作解析」については、東京農工大の藤田欣也先生他、論文が多数ありますので検索して参考するとよいでしょう。</dd>
</dl>

このセクションではWiiBoardとMacOSでの学生プロジェクトを扱いました。本書ではMacOSでのWiiRemoteプログラミングをProcsssingとActionScript以外は扱ってきませんでしたが、Bluetooth接続の安定感もあり「WiiRemote Framework」など、WindowsXP環境よりも先に日本人開発者によってプログラミング環境が開拓されてきた時期もありました。

またこのセクションで扱ったようなOSCのような「ネットワーク経由の楽器として扱う」という方法は、VJやアーティスト系に親しまれているインタラクティブなサウンドプログラム環境「Max/MSP」などでよく使われる方法です。実際にMax/MSPとWiiRemoteをつかったVJ活動などもよくききます。Windows環境だけにとらわれる必要は無いのです。

「オーラ診断」で使ったような、カメラ画像処理、画像エフェクトを組み合わせ、今後さらに幅広い層でバーチャルリアリティアート、ビデオアート、インタラクションアート作品が生まれることを期待します。
</subsection>

<!--
<figure id="IMG_4750.JPG" src="../chap9/aura-images/IMG_4750.jpg" title="IMG_4750.JPG">
 <attribute locale="latex2e" name="style">width:4cm</attribute>
</figure>
-->
<!--
これ↓は使えそうだったが紙面が足りない。
<figure id="list.png" src="../chap9/aura-images/list.png" title="list.png">
 <attribute locale="latex2e" name="style">width:4cm</attribute>
</figure>

<figure id="P1040055.JPG" src="../chap9/aura-images/P1040055.jpg" title="P1040055.JPG">
 <attribute locale="latex2e" name="style">width:4cm</attribute>
</figure>

<figure id="P1070530.JPG" src="../chap9/aura-images/P1070530.jpg" title="P1070530.JPG">
 <attribute locale="latex2e" name="style">width:4cm</attribute>
</figure>

<figure id="P1070559.JPG" src="../chap9/aura-images/P1070559.jpg" title="P1070559.JPG">
 <attribute locale="latex2e" name="style">width:4cm</attribute>
</figure>

<figure id="ss101310167.png" src="../chap9/aura-images/ss101310167.png" title="ss101310167.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>

<figure id="ss1013124318.png" src="../chap9/aura-images/ss1013124318.png" title="ss1013124318.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>

<figure id="ss103820.png" src="../chap9/aura-images/ss103820.png" title="ss103820.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>

<figure id="ss104743.png" src="../chap9/aura-images/ss104743.png" title="ss104743.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>
-->
<!--
<figure id="ss16422.png" src="../chap9/aura-images/ss16422.png" title="ss16422.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>

<figure id="ss9_3.png" src="../chap9/aura-images/ss9_3.png" title="ss9_3.png">
<attribute locale="latex2e" name="style">width:2cm</attribute>
</figure>
-->
<!--
ソースコードはさすがに重いよ
<program src="../chap9/connect.txt" title="connect"/>
<program src="../chap9/aura_check.txt" title="aura_check"/>
-->
</body>
</doc>
